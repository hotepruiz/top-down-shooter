[gd_resource type="ShaderMaterial" load_steps=6 format=3 uid="uid://yhv1n0h2ll07"]

[ext_resource type="Texture2D" uid="uid://c4ncvkcfpd0sd" path="res://Niveles/Assets/Barril/modelo/barril_1_Barril 1.png" id="1_5b4wq"]
[ext_resource type="Texture2D" uid="uid://1ehwnndb55m7" path="res://shaders/cellshading/cellshading_color_gradient2.tres" id="1_hgkyu"]
[ext_resource type="Gradient" uid="uid://g8mnxg3u7lrx" path="res://shaders/cellshading/fresnel_gradient.tres" id="2_hgkyu"]

[sub_resource type="Shader" id="Shader_5b4wq"]
code = "// NOTE: Shader automatically converted from Godot Engine 4.4.stable's StandardMaterial3D.

shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_toon, specular_toon;

uniform vec4 albedo : source_color;
uniform sampler2D texture_albedo : source_color, filter_linear_mipmap, repeat_enable;
uniform ivec2 albedo_texture_size;
uniform float point_size : hint_range(0.1, 128.0, 0.1);

uniform float roughness : hint_range(0.0, 1.0);
uniform sampler2D texture_metallic : hint_default_white, filter_linear_mipmap, repeat_enable;
uniform vec4 metallic_texture_channel;
uniform sampler2D texture_roughness : hint_roughness_r, filter_linear_mipmap, repeat_enable;

uniform float specular : hint_range(0.0, 1.0, 0.01);
uniform float metallic : hint_range(0.0, 1.0, 0.01);

uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;

#include \"res://shaders/cellshading/light_cell_shading.gdshaderinc\"
uniform sampler2D gradiente_color;
uniform sampler2D gradiente_fresnel;

void vertex() {
	UV = UV * uv1_scale.xy + uv1_offset.xy;
}

void fragment() {
	float basic_fresnel = fresnel(4.0, NORMAL, VIEW);
	
	vec2 base_uv = UV;

	vec4 albedo_tex = texture(texture_albedo, base_uv);
	ALBEDO = albedo.rgb * albedo_tex.rgb + (basic_fresnel * texture(gradiente_fresnel, vec2(basic_fresnel,0.0)).rgb * 1.0);

	float metallic_tex = dot(texture(texture_metallic, base_uv), metallic_texture_channel);
	METALLIC = metallic_tex * metallic;
	SPECULAR = specular;

	vec4 roughness_texture_channel = vec4(1.0, 0.0, 0.0, 0.0);
	float roughness_tex = dot(texture(texture_roughness, base_uv), roughness_texture_channel);
	ROUGHNESS = roughness_tex * roughness;
}
void light() {
    light_cell_shading(
        NORMAL,
        LIGHT,
        ATTENUATION,
        LIGHT_COLOR,
        gradiente_color,
        DIFFUSE_LIGHT
    );
}"

[sub_resource type="GradientTexture1D" id="GradientTexture1D_hgkyu"]
gradient = ExtResource("2_hgkyu")

[resource]
resource_name = "Barril 1"
render_priority = 0
shader = SubResource("Shader_5b4wq")
shader_parameter/albedo = Color(1, 1, 1, 1)
shader_parameter/texture_albedo = ExtResource("1_5b4wq")
shader_parameter/albedo_texture_size = Vector2i(1600, 1600)
shader_parameter/point_size = 1.0
shader_parameter/roughness = 1.0
shader_parameter/metallic_texture_channel = Vector4(1, 0, 0, 0)
shader_parameter/specular = 0.5
shader_parameter/metallic = 0.368421
shader_parameter/uv1_scale = Vector3(1, 1, 1)
shader_parameter/uv1_offset = Vector3(0, 0, 0)
shader_parameter/uv2_scale = Vector3(1, 1, 1)
shader_parameter/uv2_offset = Vector3(0, 0, 0)
shader_parameter/gradiente_color = ExtResource("1_hgkyu")
shader_parameter/gradiente_fresnel = SubResource("GradientTexture1D_hgkyu")
